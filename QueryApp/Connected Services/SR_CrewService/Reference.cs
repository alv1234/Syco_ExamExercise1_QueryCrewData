//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QueryApp.SR_CrewService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CrewQuery", Namespace="http://schemas.datacontract.org/2004/07/CrewQueryModel")]
    [System.SerializableAttribute()]
    public partial class CrewQuery : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseNumber {
            get {
                return this.LicenseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseNumberField, value) != true)) {
                    this.LicenseNumberField = value;
                    this.RaisePropertyChanged("LicenseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskDescription {
            get {
                return this.TaskDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskDescriptionField, value) != true)) {
                    this.TaskDescriptionField = value;
                    this.RaisePropertyChanged("TaskDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDescription {
            get {
                return this.TypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescriptionField, value) != true)) {
                    this.TypeDescriptionField = value;
                    this.RaisePropertyChanged("TypeDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SR_CrewService.IWcfServiceDefinition")]
    public interface IWcfServiceDefinition {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfServiceDefinition/QueryAll", ReplyAction="http://tempuri.org/IWcfServiceDefinition/QueryAllResponse")]
        System.Collections.Generic.List<QueryApp.SR_CrewService.CrewQuery> QueryAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfServiceDefinition/QueryAll", ReplyAction="http://tempuri.org/IWcfServiceDefinition/QueryAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<QueryApp.SR_CrewService.CrewQuery>> QueryAllAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfServiceDefinitionChannel : QueryApp.SR_CrewService.IWcfServiceDefinition, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WcfServiceDefinitionClient : System.ServiceModel.ClientBase<QueryApp.SR_CrewService.IWcfServiceDefinition>, QueryApp.SR_CrewService.IWcfServiceDefinition {
        
        public WcfServiceDefinitionClient() {
        }
        
        public WcfServiceDefinitionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WcfServiceDefinitionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceDefinitionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceDefinitionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<QueryApp.SR_CrewService.CrewQuery> QueryAll() {
            return base.Channel.QueryAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<QueryApp.SR_CrewService.CrewQuery>> QueryAllAsync() {
            return base.Channel.QueryAllAsync();
        }
    }
}
